[class^="btn"], [class*=" btn"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  display: inline-block;
  text-align: center;
  line-height: 20px;
  color: $dark;
  margin: 0;
  border-style: solid;
  border-width: 1px;
  border-color: $dark-15;
  background-color: $light;
  text-decoration: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -ms-touch-action: none;
  @include border-radius(3px);
  @include transition(0.3s);
  &:not(.static) {
    cursor: pointer;
  }
  &.btn, &.btn-l {
    &:not(.static) {
      &:hover {
        background-color: darken($light, 8%);
        border-color: darken($dark-15, 8%);
      }
      &:active {
        background-color: lighten($light, 8%);
        border-color: lighten($dark-15, 8%);
      }
    }
  }
  &.btn, &.btn-bordered {
    @extend %btn;
  }
  &.btn-l, &.btn-l-bordered {
    @extend %btn-l;
  }
  &.btn-bordered, &.btn-l-bordered {
    @extend %btn-bordered;
    border-color: $light;
    color: $light;
    &:hover {
      background-color: transparent;
      border-color: transparentize($light, 0.5);
      color: transparentize($light, 0.5);
    }
    &:active {
      background-color: transparent;
      border-color: transparentize($light, 0.5);
      color: transparentize($light, 0.5);
    }
  }
  &[class^="icon-"], &[class*=" icon-"] {
    font-weight: normal;
    line-height: 1;
    vertical-align: middle;
  }
  & > {
    [class^="icon-"], [class*=" icon-"] {
      vertical-align: middle;
    }
  }
  & > img {
    display: inline-block;
    vertical-align: middle;
    margin-right: 5px;
  }
  &.pulse {
    overflow: visible;
    position: relative;
    z-index: 1;
    &:after {
      content: '';
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      background-color: inherit;
      border-radius: inherit;
      border-color: inherit;
      border-width: inherit;
      z-index: -1;
      @include transition(opacity .3s, transform .3s);
      @include animation(pulse 1s cubic-bezier(0.24, 0, 0.38, 1) infinite);
    }
  }
}

%btn {
  padding: 5px 13px;
  font-size: 13px;
  font-weight: $regular;
  &[class^="icon-"], &[class*=" icon-"] {
    font-size: 20px;
    padding: 5px;
  }
  & > img {
    height: 20px;
  }
}

%btn-l {
  padding: 13px 15px;
  font-size: 15px;
  font-weight: $strong;
  &[class^="icon-"], &[class*=" icon-"] {
    font-size: 20px;
    padding: 13px;
    font-weight: $regular;
  }
  & > img {
    margin-top: -5px;
    margin-bottom: -5px;
    height: 30px;
  }
}

.btn-box {
  min-height: 62px;
  padding: 10px 5px;
  & > * {
    display: block;
    &:first-child {
      font-size: 20px;
    }
    &:last-child {
      @extend .truncate;
      font-weight: $strong;
      font-size: 11px;
    }
  }
  &[disabled] > * {
    &:first-child {
      color: $dark-15 !important;
    }
  }
  &:not([disabled]) {
    &:hover, &.active {
      @include transform(translate(0, -3px));
      @include box-shadow(0, 3px, 0, 0, $dark-15)
    }
  }
}

%btn-bordered {
  background-color: transparent;
}

@mixin colorBtn($name, $background, $color: $light) {
  $small_class: ".btn-#{$name}";
  $large_class: ".btn-l-#{$name}";
  $small_bordered_class: ".btn-bordered-#{$name}";
  $large_bordered_class: ".btn-l-bordered-#{$name}";
  #{$small_class}, #{$small_bordered_class} {
    @extend %btn;
  }
  #{$large_class}, #{$large_bordered_class} {
    @extend %btn-l;
  }
  #{$small_class}, #{$large_class} {
    color: $color;
    border-color: $background;
    background-color: $background;
    &:not(.static) {
      &:hover {
        background-color: darken($background, 8%);
        border-color: darken($background, 8%);
      }
      &:active {
        background-color: lighten($background, 8%);
        border-color: lighten($background, 8%);
      }
    }
  }
  #{$small_bordered_class}, #{$large_bordered_class} {
    @extend %btn-bordered;
    border-color: $background;
    color: $background;
    &:not(.static) {
      &:hover {
        background-color: transparent;
        border-color: transparentize($background, 0.5);
        color: transparentize($background, 0.5);
      }
      &:active {
        background-color: transparent;
        border-color: transparentize($background, 0.5);
        color: transparentize($background, 0.5);
      }
    }
  }
}

@include keyframes(pulse) {
  0% {
    opacity: 1;
    -webkit-transform: scale(1);
    transform: scale(1)
  }
  50% {
    opacity: 0;
    -webkit-transform: scale(1.5);
    transform: scale(1.5)
  }
  100% {
    opacity: 0;
    -webkit-transform: scale(1.5);
    transform: scale(1.5)
  }
}

@include colorBtn('primary', $primary);
@include colorBtn('secondary', $secondary);
@include colorBtn('tertiary', $tertiary);
@include colorBtn('success', $success);
@include colorBtn('info', $info);
@include colorBtn('warning', $warning);
@include colorBtn('danger', $danger);
@include colorBtn('quickfire', $quickfire);
@include colorBtn('discuss', $discuss);
@include colorBtn('team_up', $team_up);
@include colorBtn('clip', $clip);

.btn-disabled, .btn-l-disabled, [disabled] {
  color: $dark-15;
  border-color: transparent;
  background-color: $dark-05;
  cursor: default !important;
  &.btn-disabled {
    @extend %btn;
  }
  &.btn-l-disabled {
    @extend %btn-l;
  }
  &:hover {
    background-color: $dark-05 !important;
    border-color: transparent !important;
    color: $dark-15 !important;
  }
  &:active {
    background-color: $dark-05 !important;
    border-color: transparent !important;
    color: $dark-15 !important;
  }
}
